"use strict";(self.webpackChunknote_protocol=self.webpackChunknote_protocol||[]).push([[1710],{6141:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(5893),s=t(1151);const o={title:"",sidebar_position:2.3,sidebar_label:"Storage Locations"},r=void 0,c={id:"Problems And Solutions/2.3-Location",title:"",description:"2.3 Storage Locations",source:"@site/docs/02-Problems And Solutions/2.3-Location.md",sourceDirName:"02-Problems And Solutions",slug:"/Problems And Solutions/2.3-Location",permalink:"/docs/Problems And Solutions/2.3-Location",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2.3,frontMatter:{title:"",sidebar_position:2.3,sidebar_label:"Storage Locations"},sidebar:"docsSidebar",previous:{title:"Decentralized IDs",permalink:"/docs/Problems And Solutions/2.2-DID"},next:{title:"On-Chain Contracts",permalink:"/docs/Problems And Solutions/2.4-Contracts"}},a={},l=[{value:"2.3 Storage Locations",id:"23-storage-locations",level:3},{value:"2.3.1 Non-standard Scripts",id:"231-non-standard-scripts",level:4},{value:"2.3.2 Utilizing P2SH/P2WSH",id:"232-utilizing-p2shp2wsh",level:4},{value:"2.3.3 Employing P2TR",id:"233-employing-p2tr",level:4}];function d(n){const e={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"23-storage-locations",children:"2.3 Storage Locations"}),"\n",(0,i.jsx)(e.p,{children:"Data to unlock transactions must be provided, combining unlock scripts and redeem scripts for the process. In this stage, miners check the transaction signatures and other criteria for unlocking, confirming the originator of the data. Indexers use the block and UTXO transaction chains to determine the sequence of transactions, validating the authenticity of asset exchanges. The flag set for such unlock signatures is ALL | ANYONECANPAY. This protocol employs non-standard scripts for redemption, distinct from typical scripts like P2PKH, to avoid accidental UTXO spending. An example of the simplest Bitcoin script used in this protocol is given below."}),"\n",(0,i.jsx)(e.h4,{id:"231-non-standard-scripts",children:"2.3.1 Non-standard Scripts"}),"\n",(0,i.jsx)(e.p,{children:"The format for non-standard scripts is as follows:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Lock script: ",(0,i.jsx)(e.code,{children:"NOTE OP_2DROP OP_2DROP OP_2DROP Pubkey OP_CHECKSIG"})]}),"\n",(0,i.jsxs)(e.li,{children:["Unlock script: ",(0,i.jsx)(e.code,{children:"Signature DATA0 DATA1 DATA2 DATA3 DATA4"})]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"232-utilizing-p2shp2wsh",children:"2.3.2 Utilizing P2SH/P2WSH"}),"\n",(0,i.jsx)(e.p,{children:"In blockchains that facilitate P2SH/P2WSH mechanisms, the format is as follows:"}),"\n",(0,i.jsxs)(e.p,{children:["Unlock script: ",(0,i.jsx)(e.code,{children:"Signature DATA0 DATA1 DATA2 DATA3 DATA4"}),"\nRedeem script: ",(0,i.jsx)(e.code,{children:"NOTE OP_2DROP OP_2DROP OP_2DROP Pubkey OP_CHECKSIG"})]}),"\n",(0,i.jsx)(e.p,{children:"Data is stored within the segregated witness segment."}),"\n",(0,i.jsx)(e.h4,{id:"233-employing-p2tr",children:"2.3.3 Employing P2TR"}),"\n",(0,i.jsx)(e.p,{children:"Like P2WSH, the redeem script is used as a branch of MAST for unlocking. The unlocking script, which includes data unlocking instructions, facilitates the unlocking."}),"\n",(0,i.jsx)(e.p,{children:"In blockchains with P2TR mechanisms, the format is defined as follows:"}),"\n",(0,i.jsxs)(e.p,{children:["Unlock script: ",(0,i.jsx)(e.code,{children:"Signature DATA0 DATA1 DATA2 DATA3 DATA4"}),"\nRedeem script: ",(0,i.jsx)(e.code,{children:"NOTE OP_2DROP OP_2DROP OP_2DROP Pubkey OP_CHECKSIG"})]}),"\n",(0,i.jsx)(e.p,{children:"The unlock script's information is kept in the segregated witness section."})]})}function h(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);