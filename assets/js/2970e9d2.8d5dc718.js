"use strict";(self.webpackChunknote_protocol=self.webpackChunknote_protocol||[]).push([[6333],{6179:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=e(4848),o=e(8453);const a={title:"",sidebar_position:4.6,sidebar_label:"Off-Chain Smart Contracts"},c=void 0,s={id:"Token/4.6-OffchainContracts",title:"",description:"4.6 Off-Chain Smart Contracts",source:"@site/docs/04-Token/4.6-OffchainContracts.md",sourceDirName:"04-Token",slug:"/Token/4.6-OffchainContracts",permalink:"/docs/Token/4.6-OffchainContracts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4.6,frontMatter:{title:"",sidebar_position:4.6,sidebar_label:"Off-Chain Smart Contracts"},sidebar:"docsSidebar",previous:{title:"Additional Actions",permalink:"/docs/Token/4.5-Others"},next:{title:"Data Storage",permalink:"/docs/Token/4.7-Data"}},r={},l=[{value:"4.6 Off-Chain Smart Contracts",id:"46-off-chain-smart-contracts",level:2}];function d(t){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"46-off-chain-smart-contracts",children:"4.6 Off-Chain Smart Contracts"}),"\n",(0,i.jsx)(n.p,{children:"Smart contracts utilize the advanced Bitcoin smart contract language provided by sCrypt to ensure that the indexing validators complete execution within a limited time. This also supports advanced use cases including Swaps, Oracles, and Zero-Knowledge Proofs among others."}),"\n",(0,i.jsx)(n.p,{children:"An example of a simple off-chain contract is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export class N20_Sample extends SmartContract {\n    @prop()\n    readonly tick: ByteString\n\n    @prop()\n    readonly max: bigint\n\n    @prop()\n    readonly lim: bigint\n\n    @prop()\n    readonly dec: bigint\n\n    constructor(tick: ByteString, max: bigint, lim: bigint, dec: bigint) {\n        super(...arguments)\n        this.tick = tick\n        this.max = max\n        this.lim = lim\n        this.dec = dec\n    }\n\n    @method()\n    public check(\n        bh: BlockHeader,\n        merkleproof: MerkleProof,\n        tx: ByteString,\n        prevTx: ByteString\n    ) {\n        // verify transaction in the block\n        const txid = hash256(tx)\n        assert(Blockchain.txInBlock(txid, bh, merkleproof))\n    }\n\n    @method()\n    public mint(tick: ByteString, amt: bigint) {\n        assert(tick == this.tick, 'Tick does not match')\n        assert(amt <= this.lim, 'Amount check failed')\n    }\n\n    @method()\n    public transfer(tick: ByteString, amt: bigint) {\n        assert(tick == this.tick, 'Tick does not match')\n        assert(amt <= this.lim, 'Amount check failed')\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this segment, the ",(0,i.jsx)(n.code,{children:"check"})," function is responsible for ascertaining the presence of a Bitcoin transaction within a block. The ",(0,i.jsx)(n.code,{children:"mint"})," and ",(0,i.jsx)(n.code,{children:"transfer"})," functions are tasked with validating the feasibility of executing the two specific actions associated with N20. The indexer commits to updating the record of account balances solely upon successful contract validation."]})]})}function h(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>c,x:()=>s});var i=e(6540);const o={},a=i.createContext(o);function c(t){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),i.createElement(a.Provider,{value:n},t.children)}}}]);